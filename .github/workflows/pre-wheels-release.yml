name: Pre Python Release
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: tag
        required: true
        type: string
        default: "d-0.0.2"

jobs:

  gh_tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - 
        run: git tag $tag && git push --tags && gh release create $tag --generate-notes
        name: tag
        shell: bash
        env:
          tag: ${{ inputs.version }}

  build:
    name: build on ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
            interpreter:  3.11 3.12 
          - os: windows
            ls: dir
            target: i686
            python-architecture: x86
            interpreter:  3.11
          - os: windows
            ls: dir
            target: x86_64
            python-architecture: x64
            interpreter:  3.11
          - os: macos
            target: aarch64
            interpreter:  3.11 3.12 
          - os: ubuntu
            platform: linux
            target: i686
          - os: ubuntu
            platform: linux
            target: aarch64
          - os: ubuntu
            platform: linux
            target: armv7
            interpreter:  3.11 3.12
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: ppc64le
            interpreter:  3.11 3.12
          - os: ubuntu
            platform: linux
            target: s390x
            interpreter:  3.11 3.12
        exclude:
          - os: windows
            target: aarch64

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - run: pip install -U twine

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          working-directory: ./bindings/python
          manylinux: ${{ matrix.manylinux || 'auto' }}
          container: ${{ matrix.container }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || ' 3.11 3.12 pypy3.10' }} ${{ matrix.extra-build-args }}
          rust-toolchain: stable
          docker-options: -e CI

      - run: ${{ matrix.ls || 'ls -lh' }} dist/
        working-directory: ./bindings/python

      - run: twine check --strict dist/*
        working-directory: ./bindings/python

      - name: Upload wheels
        working-directory: ./bindings/python/dist
        shell: bash
        run: for bin in $(ls); do gh release upload $tag $bin; done
        env:
          tag: ${{ inputs.version }}